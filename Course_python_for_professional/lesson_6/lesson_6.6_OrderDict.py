# my_dict={'one':1, 'two':2, 'tree':3}
# my_dict['four']=4
# print(my_dict)
# del my_dict['tree']
# print(my_dict)
# my_dict['tree']=3
# print(my_dict)


# from collections import OrderedDict
# numbers = OrderedDict(one=1, two=2, three=3)
# print(numbers)
# numbers.move_to_end('one')       # last=True
# print(numbers)
# numbers.move_to_end('three', last=False)       # last=False
# print(numbers)
"""last (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç) ‚Äì –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (—Ç–∏–ø bool), –∫–æ—Ç–æ—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, 
–≤ –∫–∞–∫–æ–π –∫–æ–Ω–µ—Ü —Å–ª–æ–≤–∞—Ä—è –º—ã –ø–µ—Ä–µ–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç, 
–∑–Ω–∞—á–µ–Ω–∏–µ True (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü, –∑–Ω–∞—á–µ–Ω–∏–µ False ‚Äì –≤ –Ω–∞—á–∞–ª–æ"""

from collections import OrderedDict

letters = OrderedDict(b=2, d=4, a=1, c=3)
# for key in sorted(letters):
# letters.move_to_end(key)
# print(letters)


# from collections import OrderedDict
# numbers = OrderedDict(one=1, two=2, three=3)
# print(numbers.popitem())
# print(numbers)
# print(numbers.popitem(last=False))
# print(numbers)
"""–ï—Å–ª–∏ –º–µ—Ç–æ–¥—É popitem() –ø–µ—Ä–µ–¥–∞—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç last=False, 
—Ç–æ –æ–Ω –Ω–∞—á–Ω–µ—Ç —É–¥–∞–ª—è—Ç—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –ø–æ—Ä—è–¥–∫–µ FIFO"""

from collections import OrderedDict
# letters = OrderedDict(b=2, d=4, a=1, c=3)
# letters.sorted_keys = lambda: sorted(letters.keys())

# print(letters)
# print(letters.sorted_keys())
# letters['e'] = 5
# print(letters)
# print(letters.sorted_keys())
# for key in letters.sorted_keys():
#     print(key, '->', letters[key])

# from collections import OrderedDict
# vector = OrderedDict(x=3, y=4, module=5)
# print(*reversed(vector))

from collections import OrderedDict

data = OrderedDict({'Name': '–ë—Ä—É—Å–Ω–∏–∫–∞', 'IsNetObject': '–¥–∞', 'OperatingCompany': '–ë—Ä—É—Å–Ω–∏–∫–∞', 'TypeObject': '–∫–∞—Ñ–µ',
                    'AdmArea': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –æ–∫—Ä—É–≥', 'District': '—Ä–∞–π–æ–Ω –ê—Ä–±–∞—Ç',
                    'Address': '–≥–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞, –ø–µ—Ä–µ—É–ª–æ–∫ –°–∏–≤—Ü–µ–≤ –í—Ä–∞–∂–µ–∫, –¥–æ–º 6/2', 'SeatsCount': '10'})
new_data = OrderedDict()
for k, v in data.items():
    new_data[k] = v
    new_data.move_to_end(k, last=False)
# print(new_data)

from collections import OrderedDict

data = OrderedDict({'Name': '–ë—Ä—É—Å–Ω–∏–∫–∞', 'IsNetObject': '–¥–∞', 'OperatingCompany': '–ë—Ä—É—Å–Ω–∏–∫–∞', 'TypeObject': '–∫–∞—Ñ–µ',
                    'AdmArea': '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –æ–∫—Ä—É–≥', 'District': '—Ä–∞–π–æ–Ω –ê—Ä–±–∞—Ç',
                    'Address': '–≥–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞, –ø–µ—Ä–µ—É–ª–æ–∫ –°–∏–≤—Ü–µ–≤ –í—Ä–∞–∂–µ–∫, –¥–æ–º 6/2', 'SeatsCount': '10'})
new_data = OrderedDict()
list_1=list(data.keys())
list_2=list_1[::-1]
i=0
while i<=len(data)/2:
    new_data[list_1[i]]=data[list_1[i]]
    new_data[list_2[i]] = data[list_2[i]]
    i+=1
# print(new_data)

"""–§—É–Ω–∫—Ü–∏—è custom_sort() üå∂Ô∏è"""
from collections import OrderedDict
def custom_sort(ordered_dict:OrderedDict, by_values:bool=False)->OrderedDict:
    for k, v in sorted(ordered_dict.items(), key=lambda x: x[1] if by_values else x[0]):
        ordered_dict.move_to_end(k, last=True)

    # if by_values:
    #     #—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º
    #     for k,v in sorted(ordered_dict.items(), key=lambda x: x[1]):
    #         ordered_dict.move_to_end(k, last=True)
    # else:
    #     #—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–ª—é—á–∞–º
    #     for i in sorted(ordered_dict):
    #         ordered_dict.move_to_end(i, last=True)

    return ordered_dict


data = OrderedDict(Dustin=29, Anabel=17, Brian=40, Carol=16)
custom_sort(data)

print(data)



